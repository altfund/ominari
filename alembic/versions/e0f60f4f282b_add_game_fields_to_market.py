"""add game fields to market

Revision ID: e0f60f4f282b
Revises: 
Create Date: 2025-07-19 17:58:43.533268

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e0f60f4f282b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('market',
    sa.Column('source_id', sa.String(), nullable=False),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('sport', sa.String(), nullable=True),
    sa.Column('league_name', sa.String(), nullable=True),
    sa.Column('market_type', sa.String(), nullable=True),
    sa.Column('home_team', sa.String(), nullable=True),
    sa.Column('away_team', sa.String(), nullable=True),
    sa.Column('game_status', sa.String(), nullable=True),
    sa.Column('is_finished', sa.Boolean(), nullable=True),
    sa.Column('tournament', sa.String(), nullable=True),
    sa.Column('tournament_round', sa.String(), nullable=True),
    sa.Column('home_score', sa.Integer(), nullable=True),
    sa.Column('away_score', sa.Integer(), nullable=True),
    sa.Column('home_score_by_period', sa.Text(), nullable=True),
    sa.Column('away_score_by_period', sa.Text(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('last_update', sa.DateTime(), nullable=True),
    sa.Column('maturity_date', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('source_id')
    )
    op.create_table('table_metadata',
    sa.Column('table_name', sa.String(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('table_name')
    )
    op.create_table('team',
    sa.Column('team_name', sa.String(), nullable=False),
    sa.Column('league', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('team_name')
    )
    op.create_table('match',
    sa.Column('match_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('overtime_source_id', sa.String(), nullable=False),
    sa.Column('odds_api_source_id', sa.String(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['odds_api_source_id'], ['market.source_id'], ),
    sa.ForeignKeyConstraint(['overtime_source_id'], ['market.source_id'], ),
    sa.PrimaryKeyConstraint('match_id'),
    sa.UniqueConstraint('overtime_source_id', 'odds_api_source_id')
    )
    op.create_table('odd',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('source_id', sa.String(), nullable=False),
    sa.Column('market_type', sa.String(), nullable=False),
    sa.Column('line', sa.Float(), nullable=True),
    sa.Column('outcome', sa.String(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('bookmaker', sa.String(), nullable=False),
    sa.Column('american_odds', sa.Float(), nullable=True),
    sa.Column('decimal_odds', sa.Float(), nullable=True),
    sa.Column('normalized_implied', sa.Float(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['market.source_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('odd')
    op.drop_table('match')
    op.drop_table('team')
    op.drop_table('table_metadata')
    op.drop_table('market')
    # ### end Alembic commands ###
